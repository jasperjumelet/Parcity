[{"/home/jappie/parcity/client/src/index.js":"1","/home/jappie/parcity/client/src/App.js":"2","/home/jappie/parcity/client/src/components/Navbar.js":"3","/home/jappie/parcity/client/src/components/pages/SignUp.js":"4","/home/jappie/parcity/client/src/components/pages/Home.js":"5","/home/jappie/parcity/client/src/components/Button.js":"6","/home/jappie/parcity/client/src/components/HeroSection.js":"7","/home/jappie/parcity/client/src/components/Cards.js":"8","/home/jappie/parcity/client/src/components/Footer.js":"9","/home/jappie/parcity/client/src/components/CardItem.js":"10","/home/jappie/parcity/client/src/components/auth/Login.js":"11","/home/jappie/parcity/client/src/components/auth/AuthProvider.js":"12","/home/jappie/parcity/client/src/api/axios.js":"13","/home/jappie/parcity/client/src/components/pages/Discover.js":"14","/home/jappie/parcity/client/src/components/pages/AboutUs.js":"15","/home/jappie/parcity/client/src/components/auth/Register.js":"16"},{"size":530,"mtime":1667559154209,"results":"17","hashOfConfig":"18"},{"size":829,"mtime":1667660053016,"results":"19","hashOfConfig":"18"},{"size":2231,"mtime":1667659958316,"results":"20","hashOfConfig":"18"},{"size":136,"mtime":1667395155174,"results":"21","hashOfConfig":"18"},{"size":283,"mtime":1667396179064,"results":"22","hashOfConfig":"18"},{"size":649,"mtime":1667649494937,"results":"23","hashOfConfig":"18"},{"size":711,"mtime":1667477215252,"results":"24","hashOfConfig":"18"},{"size":611,"mtime":1667384253144,"results":"25","hashOfConfig":"18"},{"size":3624,"mtime":1667396946847,"results":"26","hashOfConfig":"18"},{"size":637,"mtime":1667382486345,"results":"27","hashOfConfig":"18"},{"size":4602,"mtime":1667667765627,"results":"28","hashOfConfig":"18"},{"size":324,"mtime":1667559055221,"results":"29","hashOfConfig":"18"},{"size":97,"mtime":1667563583351,"results":"30","hashOfConfig":"18"},{"size":140,"mtime":1667650103285,"results":"31","hashOfConfig":"18"},{"size":138,"mtime":1667650008557,"results":"32","hashOfConfig":"18"},{"size":4877,"mtime":1667669486075,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"uqlaxe",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},"/home/jappie/parcity/client/src/index.js",[],[],[],"/home/jappie/parcity/client/src/App.js",[],[],[],"/home/jappie/parcity/client/src/components/Navbar.js",[],[],"/home/jappie/parcity/client/src/components/pages/SignUp.js",[],[],"/home/jappie/parcity/client/src/components/pages/Home.js",[],[],"/home/jappie/parcity/client/src/components/Button.js",[],[],"/home/jappie/parcity/client/src/components/HeroSection.js",[],[],"/home/jappie/parcity/client/src/components/Cards.js",[],[],"/home/jappie/parcity/client/src/components/Footer.js",[],[],"/home/jappie/parcity/client/src/components/CardItem.js",["86"],[],"import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Cards.css';\n\nfunction CardItem(props) {\n  return (\n    <>\n      <li className=\"cards__item\">\n        <Link className=\"cards__item__link\" to={props.path}>\n          <figure className=\"cards__item__pic-wrap\" data-category={props.label}>\n            <img src={props.src} alt=\"Travel Image\" className=\"cards__item__img\"/>\n          </figure>\n          <div className=\"cards__item__info\">\n            <h5 className=\"cards__item__text\">\n              {props.text}\n            </h5>\n          </div>\n        </Link>\n      </li>\n    </>\n  )\n}\n\nexport default CardItem;\n","/home/jappie/parcity/client/src/components/auth/Login.js",["87"],[],"/home/jappie/parcity/client/src/components/auth/AuthProvider.js",[],[],"/home/jappie/parcity/client/src/api/axios.js",[],[],"/home/jappie/parcity/client/src/components/pages/Discover.js",[],[],"/home/jappie/parcity/client/src/components/pages/AboutUs.js",[],[],"/home/jappie/parcity/client/src/components/auth/Register.js",["88"],[],"import { useRef, useState, useEffect } from 'react';\n// maybe add authprovider \nimport './Auth.css';\nimport axios from '../../api/axios';\nconst REGISTER_URL = '/api/users/register';\n\nconst Register = () => {\n  const userRef = useRef();\n  const errRef = useRef();\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, [])\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [username, password])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(JSON.stringify({username, email, password}));\n    try {\n      const response = await axios.post(REGISTER_URL,\n        JSON.stringify({username, password, email}),\n        {\n          headers: {'Content-Type': 'application/json'},\n          withCredentials: false\n        }\n      );\n      setEmail('');\n      setPassword('');\n      setSuccess(true);\n    } catch (err) {\n      if (!err?.response) {\n        setErrMsg('No Server Response');\n      } else if (err.response?.status === 400) {\n        setErrMsg('Missing Data in forms or token');\n      } else {\n        setErrMsg(\"Login Failed\");\n      }\n      errRef.current.focus();\n    }\n  }\n\n  return (\n    <>\n    <body className=\"align\">\n      <h2 className=\"header-greating\">Join now</h2>\n      {success ? (\n        <section>\n          <h1>You are registered</h1>\n            <br />\n              <p>\n              <a href=\"/login\">Go to Login</a>\n              </p>\n        </section>\n        ):(\n      <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n      )}\n      <div className=\"grid\">\n        <form className=\"form login\" onSubmit={handleSubmit}>\n          <div className=\"form__field\">\n            <label htmlFor=\"login__username\"><svg className=\"icon\">\n              <use xlinkHref=\"#icon-user\"></use>\n               </svg><span className=\"hidden\">Username</span></label>\n              <input type=\"text\" className=\"form__input\" id=\"username\" \n                      placeholder=\"username\" autoComplete=\"off\" ref={userRef}\n                      onChange={(e) => setUsername(e.target.value)}\n                      value={username} required/>\n\n          </div>\n          <div className=\"form__field\">\n            <label htmlFor=\"login__username\"><svg className=\"icon\">\n              <use xlinkHref=\"#icon-user\"></use>\n               </svg><span className=\"hidden\">Email</span></label>\n              <input type=\"text\" className=\"form__input\" id=\"email\" \n                      placeholder=\"email\" autoComplete=\"off\" ref={userRef}\n                      onChange={(e) => setEmail(e.target.value)} \n                      value={email} required/>\n\n          </div>\n          <div className=\"form__field\">\n            <label htmlFor=\"login__username\"><svg className=\"icon\">\n              <use xlinkHref=\"#icon-lock\"></use>\n               </svg><span className=\"hidden\">Password</span></label>\n              <input type=\"password\" className=\"form__input\" id=\"password\" \n                      placeholder=\"password\" autoComplete=\"off\" ref={userRef}\n                      onChange={(e) => setPassword(e.target.value)} \n                      value={password} required/>\n\n          </div>\n          <div className=\"form__field\">\n            <input type=\"submit\" value=\"Register\"/>\n          </div>\n        </form>\n        <p className=\"text--center\">Already have an account? <a href='/login'>Login</a><svg className=\"icon\">\n          <use xlinkHref=\"icon-arrow-right\"></use>\n        </svg></p>\n      </div>\n       \n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icons\">\n    <symbol id=\"icon-arrow-right\" viewBox=\"0 0 1792 1792\">\n      <path d=\"M1600 960q0 54-37 91l-651 651q-39 37-91 37-51 0-90-37l-75-75q-38-38-38-91t38-91l293-293H245q-52 0-84.5-37.5T128 1024V896q0-53 32.5-90.5T245 768h704L656 474q-38-36-38-90t38-90l75-75q38-38 90-38 53 0 91 38l651 651q37 35 37 90z\" />\n    </symbol>\n    <symbol id=\"icon-lock\" viewBox=\"0 0 1792 1792\">\n      <path d=\"M640 768h512V576q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28H416q-40 0-68-28t-28-68V864q0-40 28-68t68-28h32V576q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\" />\n    </symbol>\n    <symbol id=\"icon-user\" viewBox=\"0 0 1792 1792\">\n      <path d=\"M1600 1405q0 120-73 189.5t-194 69.5H459q-121 0-194-69.5T192 1405q0-53 3.5-103.5t14-109T236 1084t43-97.5 62-81 85.5-53.5T538 832q9 0 42 21.5t74.5 48 108 48T896 971t133.5-21.5 108-48 74.5-48 42-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zm-320-893q0 159-112.5 271.5T896 896 624.5 783.5 512 512t112.5-271.5T896 128t271.5 112.5T1280 512z\" />\n    </symbol>\n    </svg>\n    </body>\n    </>\n  )\n};\n\nexport default Register;\n",{"ruleId":"89","severity":1,"message":"90","line":11,"column":13,"nodeType":"91","endLine":11,"endColumn":83},{"ruleId":"92","severity":1,"message":"93","line":94,"column":51,"nodeType":"91","endLine":94,"endColumn":63},{"ruleId":"94","severity":1,"message":"95","line":29,"column":13,"nodeType":"96","messageId":"97","endLine":29,"endColumn":21},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar"]